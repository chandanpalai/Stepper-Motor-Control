// StepperMotorControl_SRAM_PinSharer.v

// This file was auto-generated from altera_tristate_conduit_pin_sharer_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 14.0 200 at 2014.10.29.20:50:11

`timescale 1 ps / 1 ps
module StepperMotorControl_SRAM_PinSharer (
		input  wire        clk_clk,                 //   clk.clk
		input  wire        reset_reset,             // reset.reset
		output wire        request,                 //   tcm.request
		input  wire        grant,                   //      .grant
		output wire [18:0] SRAM_A,                  //      .SRAM_A_out
		output wire [0:0]  SRAM_OE_N,               //      .SRAM_OE_N_out
		output wire [1:0]  SRAM_BE_N,               //      .SRAM_BE_N_out
		output wire [0:0]  SRAM_WE_N,               //      .SRAM_WE_N_out
		output wire [15:0] SRAM_D,                  //      .SRAM_D_out
		input  wire [15:0] SRAM_D_in,               //      .SRAM_D_in
		output wire        SRAM_D_outen,            //      .SRAM_D_outen
		output wire [0:0]  SRAM_CE_N,               //      .SRAM_CE_N_out
		input  wire        tcs0_request,            //  tcs0.request
		output wire        tcs0_grant,              //      .grant
		input  wire [18:0] tcs0_address_out,        //      .address_out
		input  wire [0:0]  tcs0_outputenable_n_out, //      .outputenable_n_out
		input  wire [1:0]  tcs0_byteenable_n_out,   //      .byteenable_n_out
		input  wire [0:0]  tcs0_write_n_out,        //      .write_n_out
		input  wire [15:0] tcs0_data_out,           //      .data_out
		output wire [15:0] tcs0_data_in,            //      .data_in
		input  wire        tcs0_data_outen,         //      .data_outen
		input  wire [0:0]  tcs0_chipselect_n_out    //      .chipselect_n_out
	);

	wire  [0:0] arbiter_grant_data;        // arbiter:next_grant -> pin_sharer:next_grant
	wire        arbiter_grant_ready;       // pin_sharer:ack -> arbiter:ack
	wire        pin_sharer_tcs0_arb_valid; // pin_sharer:arb_SRAM_CVGX_tcm -> arbiter:sink0_valid

	StepperMotorControl_SRAM_PinSharer_pin_sharer pin_sharer (
		.clk                         (clk_clk),                   //      clk.clk
		.reset                       (reset_reset),               //    reset.reset
		.request                     (request),                   //      tcm.request
		.grant                       (grant),                     //         .grant
		.SRAM_A                      (SRAM_A),                    //         .SRAM_A_out
		.SRAM_OE_N                   (SRAM_OE_N),                 //         .SRAM_OE_N_out
		.SRAM_BE_N                   (SRAM_BE_N),                 //         .SRAM_BE_N_out
		.SRAM_WE_N                   (SRAM_WE_N),                 //         .SRAM_WE_N_out
		.SRAM_D                      (SRAM_D),                    //         .SRAM_D_out
		.SRAM_D_in                   (SRAM_D_in),                 //         .SRAM_D_in
		.SRAM_D_outen                (SRAM_D_outen),              //         .SRAM_D_outen
		.SRAM_CE_N                   (SRAM_CE_N),                 //         .SRAM_CE_N_out
		.tcs0_request                (tcs0_request),              //     tcs0.request
		.tcs0_grant                  (tcs0_grant),                //         .grant
		.tcs0_tcm_address_out        (tcs0_address_out),          //         .address_out
		.tcs0_tcm_outputenable_n_out (tcs0_outputenable_n_out),   //         .outputenable_n_out
		.tcs0_tcm_byteenable_n_out   (tcs0_byteenable_n_out),     //         .byteenable_n_out
		.tcs0_tcm_write_n_out        (tcs0_write_n_out),          //         .write_n_out
		.tcs0_tcm_data_out           (tcs0_data_out),             //         .data_out
		.tcs0_tcm_data_in            (tcs0_data_in),              //         .data_in
		.tcs0_tcm_data_outen         (tcs0_data_outen),           //         .data_outen
		.tcs0_tcm_chipselect_n_out   (tcs0_chipselect_n_out),     //         .chipselect_n_out
		.ack                         (arbiter_grant_ready),       //    grant.ready
		.next_grant                  (arbiter_grant_data),        //         .data
		.arb_SRAM_CVGX_tcm           (pin_sharer_tcs0_arb_valid)  // tcs0_arb.valid
	);

	StepperMotorControl_SRAM_PinSharer_arbiter arbiter (
		.clk         (clk_clk),                   //       clk.clk
		.reset       (reset_reset),               // clk_reset.reset
		.ack         (arbiter_grant_ready),       //     grant.ready
		.next_grant  (arbiter_grant_data),        //          .data
		.sink0_valid (pin_sharer_tcs0_arb_valid)  //     sink0.valid
	);

endmodule
