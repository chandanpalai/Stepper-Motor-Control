-- StepperMotorControl_SRAM_PinSharer.vhd

-- This file was auto-generated from altera_tristate_conduit_pin_sharer_hw.tcl.  If you edit it your changes
-- will probably be lost.
-- 
-- Generated using ACDS version 14.0 200 at 2014.10.28.18:42:36

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity StepperMotorControl_SRAM_PinSharer is
	port (
		clk_clk                 : in  std_logic                     := '0';             --   clk.clk
		reset_reset             : in  std_logic                     := '0';             -- reset.reset
		request                 : out std_logic;                                        --   tcm.request
		grant                   : in  std_logic                     := '0';             --      .grant
		SRAM_A                  : out std_logic_vector(18 downto 0);                    --      .SRAM_A_out
		SRAM_OE_N               : out std_logic_vector(0 downto 0);                     --      .SRAM_OE_N_out
		SRAM_BE_N               : out std_logic_vector(1 downto 0);                     --      .SRAM_BE_N_out
		SRAM_WE_N               : out std_logic_vector(0 downto 0);                     --      .SRAM_WE_N_out
		SRAM_D                  : out std_logic_vector(15 downto 0);                    --      .SRAM_D_out
		SRAM_D_in               : in  std_logic_vector(15 downto 0) := (others => '0'); --      .SRAM_D_in
		SRAM_D_outen            : out std_logic;                                        --      .SRAM_D_outen
		SRAM_CE_N               : out std_logic_vector(0 downto 0);                     --      .SRAM_CE_N_out
		tcs0_request            : in  std_logic                     := '0';             --  tcs0.request
		tcs0_grant              : out std_logic;                                        --      .grant
		tcs0_address_out        : in  std_logic_vector(18 downto 0) := (others => '0'); --      .address_out
		tcs0_outputenable_n_out : in  std_logic_vector(0 downto 0)  := (others => '0'); --      .outputenable_n_out
		tcs0_byteenable_n_out   : in  std_logic_vector(1 downto 0)  := (others => '0'); --      .byteenable_n_out
		tcs0_write_n_out        : in  std_logic_vector(0 downto 0)  := (others => '0'); --      .write_n_out
		tcs0_data_out           : in  std_logic_vector(15 downto 0) := (others => '0'); --      .data_out
		tcs0_data_in            : out std_logic_vector(15 downto 0);                    --      .data_in
		tcs0_data_outen         : in  std_logic                     := '0';             --      .data_outen
		tcs0_chipselect_n_out   : in  std_logic_vector(0 downto 0)  := (others => '0')  --      .chipselect_n_out
	);
end entity StepperMotorControl_SRAM_PinSharer;

architecture rtl of StepperMotorControl_SRAM_PinSharer is
	component StepperMotorControl_SRAM_PinSharer_pin_sharer is
		port (
			clk                         : in  std_logic                     := 'X';             -- clk
			reset                       : in  std_logic                     := 'X';             -- reset
			request                     : out std_logic;                                        -- request
			grant                       : in  std_logic                     := 'X';             -- grant
			SRAM_A                      : out std_logic_vector(18 downto 0);                    -- SRAM_A_out
			SRAM_OE_N                   : out std_logic_vector(0 downto 0);                     -- SRAM_OE_N_out
			SRAM_BE_N                   : out std_logic_vector(1 downto 0);                     -- SRAM_BE_N_out
			SRAM_WE_N                   : out std_logic_vector(0 downto 0);                     -- SRAM_WE_N_out
			SRAM_D                      : out std_logic_vector(15 downto 0);                    -- SRAM_D_out
			SRAM_D_in                   : in  std_logic_vector(15 downto 0) := (others => 'X'); -- SRAM_D_in
			SRAM_D_outen                : out std_logic;                                        -- SRAM_D_outen
			SRAM_CE_N                   : out std_logic_vector(0 downto 0);                     -- SRAM_CE_N_out
			tcs0_request                : in  std_logic                     := 'X';             -- request
			tcs0_grant                  : out std_logic;                                        -- grant
			tcs0_tcm_address_out        : in  std_logic_vector(18 downto 0) := (others => 'X'); -- address_out
			tcs0_tcm_outputenable_n_out : in  std_logic_vector(0 downto 0)  := (others => 'X'); -- outputenable_n_out
			tcs0_tcm_byteenable_n_out   : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- byteenable_n_out
			tcs0_tcm_write_n_out        : in  std_logic_vector(0 downto 0)  := (others => 'X'); -- write_n_out
			tcs0_tcm_data_out           : in  std_logic_vector(15 downto 0) := (others => 'X'); -- data_out
			tcs0_tcm_data_in            : out std_logic_vector(15 downto 0);                    -- data_in
			tcs0_tcm_data_outen         : in  std_logic                     := 'X';             -- data_outen
			tcs0_tcm_chipselect_n_out   : in  std_logic_vector(0 downto 0)  := (others => 'X'); -- chipselect_n_out
			ack                         : out std_logic;                                        -- ready
			next_grant                  : in  std_logic_vector(0 downto 0)  := (others => 'X'); -- data
			arb_SRAM_CVGX_tcm           : out std_logic                                         -- valid
		);
	end component StepperMotorControl_SRAM_PinSharer_pin_sharer;

	component StepperMotorControl_SRAM_PinSharer_arbiter is
		port (
			clk         : in  std_logic                    := 'X'; -- clk
			reset       : in  std_logic                    := 'X'; -- reset
			ack         : in  std_logic                    := 'X'; -- ready
			next_grant  : out std_logic_vector(0 downto 0);        -- data
			sink0_valid : in  std_logic                    := 'X'  -- valid
		);
	end component StepperMotorControl_SRAM_PinSharer_arbiter;

	signal arbiter_grant_data        : std_logic_vector(0 downto 0); -- arbiter:next_grant -> pin_sharer:next_grant
	signal arbiter_grant_ready       : std_logic;                    -- pin_sharer:ack -> arbiter:ack
	signal pin_sharer_tcs0_arb_valid : std_logic;                    -- pin_sharer:arb_SRAM_CVGX_tcm -> arbiter:sink0_valid

begin

	pin_sharer : component StepperMotorControl_SRAM_PinSharer_pin_sharer
		port map (
			clk                         => clk_clk,                   --      clk.clk
			reset                       => reset_reset,               --    reset.reset
			request                     => request,                   --      tcm.request
			grant                       => grant,                     --         .grant
			SRAM_A                      => SRAM_A,                    --         .SRAM_A_out
			SRAM_OE_N                   => SRAM_OE_N,                 --         .SRAM_OE_N_out
			SRAM_BE_N                   => SRAM_BE_N,                 --         .SRAM_BE_N_out
			SRAM_WE_N                   => SRAM_WE_N,                 --         .SRAM_WE_N_out
			SRAM_D                      => SRAM_D,                    --         .SRAM_D_out
			SRAM_D_in                   => SRAM_D_in,                 --         .SRAM_D_in
			SRAM_D_outen                => SRAM_D_outen,              --         .SRAM_D_outen
			SRAM_CE_N                   => SRAM_CE_N,                 --         .SRAM_CE_N_out
			tcs0_request                => tcs0_request,              --     tcs0.request
			tcs0_grant                  => tcs0_grant,                --         .grant
			tcs0_tcm_address_out        => tcs0_address_out,          --         .address_out
			tcs0_tcm_outputenable_n_out => tcs0_outputenable_n_out,   --         .outputenable_n_out
			tcs0_tcm_byteenable_n_out   => tcs0_byteenable_n_out,     --         .byteenable_n_out
			tcs0_tcm_write_n_out        => tcs0_write_n_out,          --         .write_n_out
			tcs0_tcm_data_out           => tcs0_data_out,             --         .data_out
			tcs0_tcm_data_in            => tcs0_data_in,              --         .data_in
			tcs0_tcm_data_outen         => tcs0_data_outen,           --         .data_outen
			tcs0_tcm_chipselect_n_out   => tcs0_chipselect_n_out,     --         .chipselect_n_out
			ack                         => arbiter_grant_ready,       --    grant.ready
			next_grant                  => arbiter_grant_data,        --         .data
			arb_SRAM_CVGX_tcm           => pin_sharer_tcs0_arb_valid  -- tcs0_arb.valid
		);

	arbiter : component StepperMotorControl_SRAM_PinSharer_arbiter
		port map (
			clk         => clk_clk,                   --       clk.clk
			reset       => reset_reset,               -- clk_reset.reset
			ack         => arbiter_grant_ready,       --     grant.ready
			next_grant  => arbiter_grant_data,        --          .data
			sink0_valid => pin_sharer_tcs0_arb_valid  --     sink0.valid
		);

end architecture rtl; -- of StepperMotorControl_SRAM_PinSharer
